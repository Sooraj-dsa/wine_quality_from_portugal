# -*- coding: utf-8 -*-
"""winequality-red.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17ouVBO-js7aSOhMI7ROghlbrypX_vfX5
"""

import pandas as pd
import numpy as np
import seaborn as sns

df= pd.read_csv('winequality-red.csv', sep=';')

df.head(2)

df.info()

sns.pairplot(df)

df.describe()

"""1. What is maximum amount of citric acid in the wine? Enter the answer to 1 decimal point."""

df['citric acid'].max()

"""2. How many missing values are in the dataset?


"""

df.isnull().sum()

"""3. What is the median wine quality?"""

df['quality'].median()

"""# Row and column modification

1. Rename the columns to have underscore instead of space. For example old name: fixed acidity to new name: fixed_acidity
"""

df.rename(columns=lambda x: x.replace(' ', '_') if len(x.split()) > 1 else x, inplace=True)

df.columns

df.shape

"""2. Drop the first and last row"""

df_first_last = df.drop([0,1598])
df_first_last

"""3. The dataset contains an outlier. Remove the row where that contains the maximum total sulfur dioxide."""

max_index = df['total_sulfur_dioxide'].idxmax()

df_drop = df.drop(max_index)

"""4. We notice that all the datatypes are float besides the quality column. Convert the column to float *datatype*"""

df["quality_float"] = df["quality"].astype(float)

"""5. Remove density, residual sugar and chlorides columns from the dataset"""

df_drop_three = df.drop(['density','residual_sugar','chlorides'], axis=1)

"""6. Create a new column that calculates the alcohol content in terms of percentage (%)"""

df['alcohol_perc'] = (df['alcohol'] / df['alcohol'].max())*100

"""7. Evaluate the amount of sulphates and citric acid in the red wine"""

df['sulphates_citric_acid'] = df['citric_acid'] + df['sulphates']

"""8. Create a new column that identifies if the alcohol content is below the mean of the alcohol content in the dataset."""

df['deviation_alcohol'] = df['alcohol'] < df['alcohol'].mean()

"""9. Convert the wine quality scores into categorical labels: low, medium, high"""

df['quality_label'] = pd.cut(df['quality'], bins=[0,5,7,10],labels=['low','medium','high'])
df

"""10. Create a new column that calculates the ratio of free sulfur dioxide to total sulfur dioxide."""

df['free_total_ratio'] = df['free_sulfur_dioxide'] / df['total_sulfur_dioxide']

df.head(2)